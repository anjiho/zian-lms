<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zianedu.lms.mapper.MemberManageMapper">

    <select id="selectMemberListBySelect" resultType="com.zianedu.lms.dto.MemberSelectListDTO">
        SELECT USER_KEY, USER_ID, NAME, TELEPHONE_MOBILE, AUTHORITY
        FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
        ORDER BY USER_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectMemberListBySelectCount" resultType="Integer">
        SELECT COUNT(USER_KEY) FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
    </select>

    <select id="selectTUserList" resultType="MemberListDTO">
        SELECT
                USER_KEY, USER_ID, NAME, TELEPHONE_MOBILE, EMAIL, INDATE,
                (SELECT NAME FROM T_CATEGORY WHERE CTG_KEY = T_USER.interest_ctg_key_0) as AFFILIATION_NAME,
                GRADE,
                AUTHORITY,
                TO_CHAR(GRADE_DATE, 'YYYY-MM-DD') as GRADE_DATE,
                IS_MOBILE_REG
        FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
        <if test="grade != null">
            AND GRADE = #{grade}
        </if>
        <if test="affiliationCtgKey > 0">
            AND INTEREST_CTG_KEY_0 = #{affiliationCtgKey} OR INTEREST_CTG_KEY_1 = #{affiliationCtgKey}
        </if>
        ORDER BY INDATE DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTUserListCount" resultType="Integer">
        SELECT COUNT (USER_KEY) FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
        <if test="grade != null">
            AND GRADE = #{grade}
        </if>
        <if test="affiliationCtgKey > 0">
            AND INTEREST_CTG_KEY_0 = #{affiliationCtgKey} OR INTEREST_CTG_KEY_1 = #{affiliationCtgKey}
        </if>
    </select>

    <select id="selectTUserSecessionList" resultType="com.zianedu.lms.vo.TUserSecessionVO">
        SELECT * FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NOT NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        ORDER BY SECESSION_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTUserSecessionListCount" resultType="Integer">
        SELECT COUNT (SECESSION_KEY) FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NOT NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
    </select>

    <select id="selectTCounselList" resultType="UserConsultListDTO">
      SELECT COUNSEL_KEY, TYPE, TELEPHONE, TELEPHONE_MOBILE,
             TO_CHAR(INDATE, 'YYYY-MM-DD HH:mi:ss') as INDATE,
             TO_CHAR(PROC_START_DATE, 'YYYY-MM-DD HH24:mi:ss') as PROC_START_DATE,
             TO_CHAR(PROC_END_DATE, 'YYYY-MM-DD HH24:mi:ss') as PROC_END_DATE
      FROM T_COUNSEL WHERE USER_KEY = #{userKey}
    </select>

    <select id="selectTCounselInfo" resultType="com.zianedu.lms.vo.TCounselVO">
      SELECT * FROM T_COUNSEL WHERE COUNSEL_KEY = #{counselKey}
    </select>

    <select id="selectTUserSecessionApplyList" resultType="com.zianedu.lms.vo.TUserSecessionVO">
        SELECT * FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        ORDER BY SECESSION_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTUserSecessionApplyListCount" resultType="Integer">
        SELECT COUNT(*) FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
    </select>

    <select id="selectTUserInfo" resultType="com.zianedu.lms.vo.TUserVO">
        SELECT
            USER_KEY,
            USER_ID,
            NAME,
            AUTHORITY,
            TO_CHAR(INDATE, 'YYYY-MM-DD') as INDATE,
            TO_CHAR(BIRTH, 'YYYY-MM-DD') as BIRTH,
            TELEPHONE,
            TELEPHONE_MOBILE,
            EMAIL,
            RECV_EMAIL,
            RECV_SMS,
            ZIPCODE,
            ADDRESS_ROAD,
            ADDRESS,
            WELFARE_DC_PERCENT,
            INTEREST_CTG_KEY_0,
            GRADE,
            GRADE_DATE,
            GRADE_PRICE,
            NOTE,
            CERT_CODE,
            IS_MOBILE_REG
        FROM T_USER WHERE USER_KEY = #{userKey}
    </select>

    <select id="selectTCounselListByPaging" resultType="CounselListDTO">
         SELECT A.COUNSEL_KEY,
                B.NAME,
                A.TYPE,
                B.TELEPHONE,
                B.TELEPHONE_MOBILE,
                TO_CHAR(A.INDATE, 'YYYY-MM-DD HH:mi:ss') as INDATE,
                TO_CHAR(A.PROC_START_DATE, 'YYYY-MM-DD HH24:mi:ss') as PROC_START_DATE,
                TO_CHAR(A.PROC_END_DATE, 'YYYY-MM-DD HH24:mi:ss') as PROC_END_DATE
        FROM T_COUNSEL A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        <if test="searchType == 'number'">
            AND A.COUNSEL_KEY = #{searchText}
        </if>
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        ORDER BY A.COUNSEL_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTCounselListByPagingCount" resultType="Integer">
        SELECT COUNT (A.COUNSEL_KEY)
        FROM T_COUNSEL A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        <if test="searchType == 'number'">
            AND A.COUNSEL_KEY = #{searchText}
        </if>
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
    </select>

    <select id="selectTeacherList" resultType="MemberListDTO">
        SELECT
            B.USER_KEY, B.NAME, B.TELEPHONE_MOBILE, B.EMAIL, B.INDATE, B.USER_ID,
            (SELECT NAME FROM T_CATEGORY WHERE CTG_KEY = B.INTEREST_CTG_KEY_0) as affiliationName,
            B.GRADE, TO_CHAR(B.GRADE_DATE, 'YYYY-MM-DD') as GRADE_DATE, B.AUTHORITY
        FROM T_TEACHER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE B.AUTHORITY = 5
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND B.TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND B.TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND B.USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND B.INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND B.INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
        ORDER BY B.INDATE DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTeacherListCount" resultType="Integer">
        SELECT COUNT (A.TEACHER_KEY)
        FROM T_TEACHER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE B.AUTHORITY = 5
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND B.TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND B.TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND B.USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND B.INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND B.INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
    </select>

    <select id="selectTTeacherInfo" resultType="com.zianedu.lms.vo.TTeacherVO">
        SELECT * FROM T_TEACHER WHERE USER_KEY = #{userKey}
    </select>

    <select id="selectTLinkKeyByTeacher" resultType="com.zianedu.lms.vo.TLinkKeyVO">
        SELECT A.LINK_KEY, A.REQ_KEY FROM T_LINK_KEY A
        INNER JOIN T_CATEGORY B
        ON A.REQ_KEY = B.CTG_KEY
        WHERE A.REQ_TYPE = 100
        AND A.RES_TYPE = 200
        AND A.RES_KEY = #{teacherKey}
    </select>

    <select id="selectNumberExposureTeacherList" resultType="com.zianedu.lms.vo.TLinkKeyVO">
        SELECT
            A.LINK_KEY, A.REQ_KEY, A.POS, C.NAME
        FROM T_LINK_KEY A
        INNER JOIN T_TEACHER B ON A.RES_KEY = B.TEACHER_KEY
        INNER JOIN T_USER C
        ON B.USER_KEY = C.USER_KEY
        WHERE A.REQ_KEY = #{reqKey}
        ORDER By POS ASC
    </select>

    <select id="selectSmsSendLogList" parameterType="SmsSearchParamDTO" resultType="SmsSendListDTO">
        SELECT
            TO_CHAR(A.TR_SENDDATE, 'YYYY-MM-DD HH24:MI:SS') as SEND_DATE,
            A.TR_PHONE  as RECEIVE_NUMBER,
            A.TR_CALLBACK as SEND_NUMBER,
            A.TR_ETC2 as USER_KEY,
            A.TR_ETC3 as RECEIVER_NAME,
            B.USER_ID as RECEIVER_ID,
            A.TR_RSLTSTAT as SEND_RESULT,
            A.TR_MSG as SEND_MESSAGE
        FROM ${tableName} A
        LEFT OUTER JOIN T_USER B
        ON A.TR_ETC2 = B.USER_KEY
        WHERE 1=1
        <if test="searchType == 'name'">
            AND A.TR_ETC3 LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND A.TR_PHONE = #{searchText}
        </if>
        <if test="searchType == 'content'">
            AND A.TR_MSG LIKE '%'||#{searchText}||'%'
        </if>
        ORDER BY A.TR_NUM DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectSmsSendLogListCount" parameterType="SmsSearchParamDTO" resultType="Integer">
        SELECT COUNT( A.TR_NUM )
        FROM ${tableName} A
        LEFT OUTER JOIN T_USER B
        ON A.TR_ETC2 = B.USER_KEY
        WHERE 1=1
        <if test="searchType == 'name'">
            AND A.TR_ETC3 LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND A.TR_PHONE = #{searchText}
        </if>
        <if test="searchType == 'content'">
            AND A.TR_MSG LIKE '%'||#{searchText}||'%'
        </if>
    </select>

    <select id="selectCalculateTeacherList" resultType="com.zianedu.lms.vo.TTeacherVO">
        SELECT A.TEACHER_KEY, A.ONLINELEC_CALCULATE_RATE, A.OFFLINELEC_CALCULATE_RATE
        FROM T_TEACHER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE B.STATUS = 10
        AND A.ONLINELEC_CALCULATE_RATE IS NOT NULL
        ORDER BY A.TEACHER_KEY ASC
    </select>

    <select id="selectSearchTeacherList" resultType="MemberListDTO">
        SELECT
            A.TEACHER_KEY, B.NAME
        FROM T_TEACHER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE B.STATUS = 10
        ORDER BY B.NAME
    </select>

    <select id="selectUserCountByUserId" resultType="Integer">
        SELECT COUNT(USER_KEY) FROM T_USER WHERE USER_ID = #{userId}
    </select>

    <insert id="insertTUSer" parameterType="com.zianedu.lms.vo.TUserVO">
        <selectKey resultType="Integer" keyProperty="userKey" order="BEFORE">
            SELECT T_USER_SEQ.nextval FROM DUAL
        </selectKey>
        INSERT INTO T_USER
        (
            USER_KEY, C_KEY, USER_ID, INDATE, NAME, AUTHORITY, STATUS, PWD, BIRTH, LUNAR, GENDER, TELEPHONE,
            TELEPHONE_MOBILE, ZIPCODE, ADDRESS_ROAD, ADDRESS_NUMBER, ADDRESS, EMAIL,
            GRADE, INTEREST_CTG_KEY_0, IS_MOBILE_REG,
            ADMIN_AUTHORITY_KEY, USER_PWD
        )
        VALUES
        (
            #{userKey}, #{cKey}, #{userId}, sysdate, #{name}, #{authority}, #{status}, #{pwd}, TO_DATE(#{birth}, 'YYYY-MM-DD hh:mi:ss'), #{lunar}, #{gender}, #{telephone},
            #{telephoneMobile}, #{zipcode}, #{addressRoad}, #{addressNumber}, #{address}, #{email},
            #{grade}, #{interestCtgKey0}, #{isMobileReg},
            #{adminAuthorityKey}, #{userPwd}
        )
    </insert>

    <insert id="insertTCounsel" parameterType="com.zianedu.lms.vo.TCounselVO">
        INSERT INTO T_COUNSEL
        (
            COUNSEL_KEY, C_KEY, USER_KEY, WRITE_USER_KEY, TYPE, STATUS,
            <if test="indate != ''">INDATE,</if>
            <if test="procStartDate != ''">PROC_START_DATE,</if>
            <if test="procEndDate != ''">PROC_END_DATE,</if>
            TELEPHONE, TELEPHONE_MOBILE, MEMO, CONTENTS
        )
        VALUES
        (
            T_COUNSEL_SEQ.nextval, 100, #{userKey}, #{writeUserKey}, #{type}, #{status},
            <if test="indate != ''">sysdate,</if>
            <if test="procStartDate != ''">sysdate,</if>
            <if test="procEndDate != ''">sysdate,</if>
            #{telephone}, #{telephoneMobile}, #{memo}, #{contents}
        )
    </insert>

    <insert id="insertTTeacher" parameterType="com.zianedu.lms.vo.TTeacherVO">
        <selectKey resultType="Integer" keyProperty="teacherKey" order="BEFORE">
            SELECT T_TEACHER_SEQ.nextval FROM DUAL
        </selectKey>
        INSERT INTO T_TEACHER
        (
            TEACHER_KEY, USER_KEY, IMAGE_LIST, IMAGE_TEACHER_LIST, IMAGE_TEACHER_VIEW,
            GREETING, HISTORY, BOOK_WRITING, ONLINELEC_CALCULATE_RATE, OFFLINELEC_CALCULATE_RATE, SAMPLE_VOD_FILE
        )
        VALUES
        (
            #{teacherKey}, #{userKey}, #{imageList}, #{imageTeacherList}, #{imageTeacherView},
            #{greeting}, #{history}, #{bookWriting}, #{onlinelecCalculateRate}, #{offlinelecCalculateRate}, #{sampleVodFile}
        )
    </insert>

    <insert id="insertScTran" parameterType="com.zianedu.lms.vo.ScTranVO">
        INSERT INTO SC_TRAN
        (
            TR_NUM, TR_SENDDATE, TR_ID, TR_SENDSTAT, TR_RSLTSTAT, TR_MSGTYPE, TR_PHONE, TR_CALLBACK,
            TR_RSLTDATE, TR_MODIFIED, TR_MSG, TR_NET, TR_ETC1, TR_ETC2, TR_ETC3, TR_ETC4, TR_ETC5, TR_ETC6,
            TR_REALSENDDATE, TR_ROUTEID
        )
        VALUES
        (
            SC_TRAN_SEQ.nextval, TO_DATE(#{trSenddate}, 'YYYY-MM-DD hh24:mi:ss'), #{trId}, #{trSendstat}, #{trRsltstat}, #{trMsgtype}, #{trPhone}, #{trCallback},
            #{trRsltdate}, #{trModified}, #{trMsg}, #{trNet}, #{trEtc1}, #{trEtc2}, #{trEtc3}, #{trEtc4}, #{trEtc5}, #{trEtc6},
            #{trRealsenddate}, #{trRouteid}
        )
    </insert>

    <update id="updateTCounsel" parameterType="com.zianedu.lms.vo.TCounselVO">
        UPDATE T_COUNSEL
        <set>
            <if test="type != null">TYPE = #{type},</if>
            <if test="status != null">STATUS = #{status},</if>
            <if test="procStartDate != '' and procStartDate != ''">PROC_START_DATE = #{procStartDate},</if>
            <if test="procEndDate != '' and procEndDate != ''">PROC_END_DATE = #{procEndDate},</if>
            <if test="memo != '' and memo != ''">MEMO = #{memo},</if>
            <if test="contents != '' and contents != ''">CONTENTS = #{contents},</if>
        </set>
        WHERE COUNSEL_KEY = #{counselKey}
    </update>

    <update id="updateTLinkKeyPos">
        UPDATE T_LINK_KEY
        SET POS = #{pos}
        WHERE LINK_KEY = #{linkKey}
    </update>

    <update id="updateTUserSecessionObtainDate" parameterType="Integer">
        UPDATE T_USER_SECESSION SET OBTAIN_DATE = sysdate WHERE SECESSION_KEY = #{secessionKey}
    </update>

    <update id="updateTUser" parameterType="com.zianedu.lms.vo.TUserVO">
        UPDATE T_USER
        <set>
            <if test="name != ''">NAME = #{name},</if>
            <if test="authority > -1">AUTHORITY = #{authority},</if>
            <if test="status > -1">STATUS = #{status},</if>
            <if test="userPwd != ''">USER_PWD = #{userPwd},</if>
            <if test="birth != ''">BIRTH = #{birth},</if>
            <if test="telephone != ''">TELEPHONE = #{telephone},</if>
            <if test="telephoneMobile != ''">TELEPHONE_MOBILE = #{telephoneMobile},</if>
            <if test="zipcode != ''">ZIPCODE = #{zipcode},</if>
            <if test="addressRoad != ''">ADDRESS_ROAD = #{addressRoad},</if>
            <if test="addressNumber != ''">ADDRESS_NUMBER = #{addressNumber},</if>
            <if test="address != ''">ADDRESS = #{address},</if>
            <if test="email != ''">EMAIL = #{email},</if>
            <if test="interestCtgKey0 != ''">INTEREST_CTG_KEY_0 = #{interestCtgKey0},</if>
        </set>
        <if test="userKey > 0">
            WHERE USER_KEY = #{userKey}
        </if>
    </update>

    <update id="updateTTeacher" parameterType="com.zianedu.lms.vo.TTeacherVO">
        UPDATE T_TEACHER
        <set>
            <if test="imageList != ''">IMAGE_LIST = #{imageList},</if>
            <if test="imageTeacherList != ''">IMAGE_TEACHER_LIST = #{imageTeacherList},</if>
            <if test="imageTeacherView != ''">IMAGE_TEACHER_VIEW = #{imageTeacherView},</if>
            <if test="greeting != ''">GREETING = #{greeting},</if>
            <if test="history != ''">HISTORY = #{history},</if>
            <if test="bookWriting != ''">BOOK_WRITING = #{bookWriting},</if>
            <if test="onlinelecCalculateRate != ''">ONLINELEC_CALCULATE_RATE = #{onlinelecCalculateRate},</if>
            <if test="offlinelecCalculateRate != ''">OFFLINELEC_CALCULATE_RATE = #{offlinelecCalculateRate},</if>
            <if test="sampleVodFile != ''">SAMPLE_VOD_FILE = #{sampleVodFile},</if>
        </set>
        <if test="teacherKey > 0">
            WHERE TEACHER_KEY = #{teacherKey}
        </if>
    </update>

    <delete id="deleteTUserSecession" parameterType="Integer">
        DELETE FROM T_USER_SECESSION WHERE SECESSION_KEY = #{secessionKey}
    </delete>

</mapper>
