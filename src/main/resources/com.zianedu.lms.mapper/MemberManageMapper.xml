<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zianedu.lms.mapper.MemberManageMapper">

    <select id="selectMemberListBySelect" resultType="com.zianedu.lms.dto.MemberSelectListDTO">
        SELECT USER_KEY, USER_ID, NAME, TELEPHONE_MOBILE, AUTHORITY
        FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
        ORDER BY USER_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectMemberListBySelectCount" resultType="Integer">
        SELECT COUNT(USER_KEY) FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
    </select>

    <select id="selectTUserList" resultType="MemberListDTO">
        SELECT
                USER_KEY, USER_ID, NAME, TELEPHONE_MOBILE, EMAIL, INDATE,
                (SELECT NAME FROM T_CATEGORY WHERE CTG_KEY = T_USER.interest_ctg_key_0) as AFFILIATION_NAME,
                GRADE,
                AUTHORITY,
                TO_CHAR(GRADE_DATE, 'YYYY-MM-DD') as GRADE_DATE,
                IS_MOBILE_REG
        FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
        <if test="grade != null">
            AND GRADE = #{grade}
        </if>
        <if test="affiliationCtgKey > 0">
            AND INTEREST_CTG_KEY_0 = #{affiliationCtgKey} OR INTEREST_CTG_KEY_1 = #{affiliationCtgKey}
        </if>
        ORDER BY INDATE DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTUserListCount" resultType="Integer">
        SELECT COUNT (USER_KEY) FROM T_USER
        WHERE 1=1
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
        <if test="grade != null">
            AND GRADE = #{grade}
        </if>
        <if test="affiliationCtgKey > 0">
            AND INTEREST_CTG_KEY_0 = #{affiliationCtgKey} OR INTEREST_CTG_KEY_1 = #{affiliationCtgKey}
        </if>
    </select>

    <select id="selectTUserSecessionList" resultType="com.zianedu.lms.vo.TUserSecessionVO">
        SELECT * FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NOT NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        ORDER BY SECESSION_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTUserSecessionListCount" resultType="Integer">
        SELECT COUNT (SECESSION_KEY) FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NOT NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
    </select>

    <select id="selectTCounselList" resultType="UserConsultListDTO">
      SELECT COUNSEL_KEY, TYPE,
             TO_CHAR(INDATE, 'YYYY-MM-DD HH:mi:ss') as INDATE,
             TO_CHAR(PROC_START_DATE, 'YYYY-MM-DD HH:mi:ss') as PROC_START_DATE,
             TO_CHAR(PROC_END_DATE, 'YYYY-MM-DD HH:mi:ss') as PROC_END_DATE
      FROM T_COUNSEL WHERE USER_KEY = #{userKey}
    </select>

    <select id="selectTUserSecessionApplyList" resultType="com.zianedu.lms.vo.TUserSecessionVO">
        SELECT * FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
        ORDER BY SECESSION_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTUserSecessionApplyListCount" resultType="Integer">
        SELECT * FROM T_USER_SECESSION
        WHERE OBTAIN_DATE IS NULL
        <if test="searchType == 'name'">
            AND NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND USER_ID = #{searchText}
        </if>
    </select>

    <select id="selectTUserInfo" resultType="com.zianedu.lms.vo.TUserVO">
        SELECT
            USER_KEY,
            USER_ID,
            NAME,
            AUTHORITY,
            TO_CHAR(INDATE, 'YYYY-MM-DD') as INDATE,
            TO_CHAR(BIRTH, 'YYYY-MM-DD') as BIRTH,
            TELEPHONE,
            TELEPHONE_MOBILE,
            EMAIL,
            RECV_EMAIL,
            RECV_SMS,
            ZIPCODE,
            ADDRESS_ROAD,
            ADDRESS,
            WELFARE_DC_PERCENT,
            INTEREST_CTG_KEY_0,
            GRADE,
            GRADE_DATE,
            GRADE_PRICE,
            NOTE,
            CERT_CODE,
            IS_MOBILE_REG
        FROM T_USER WHERE USER_KEY = #{userKey}
    </select>

    <select id="selectTCounselListByPaging" resultType="CounselListDTO">
         SELECT A.COUNSEL_KEY,
                B.NAME,
                A.TYPE,
                B.TELEPHONE,
                B.TELEPHONE_MOBILE,
                TO_CHAR(A.INDATE, 'YYYY-MM-DD HH:mi:ss') as INDATE,
                TO_CHAR(A.PROC_START_DATE, 'YYYY-MM-DD HH:mi:ss') as PROC_START_DATE,
                TO_CHAR(A.PROC_END_DATE, 'YYYY-MM-DD HH:mi:ss') as PROC_END_DATE
        FROM T_COUNSEL A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        <if test="searchType == 'number'">
            AND A.COUNSEL_KEY = #{searchText}
        </if>
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        ORDER BY A.COUNSEL_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTCounselListByPagingCount" resultType="Integer">
        SELECT COUNT (A.COUNSEL_KEY)
        FROM T_COUNSEL A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        <if test="searchType == 'number'">
            AND A.COUNSEL_KEY = #{searchText}
        </if>
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
    </select>

    <select id="selectTeacherList" resultType="MemberListDTO">
        SELECT
            B.USER_KEY, B.NAME, B.TELEPHONE_MOBILE, B.EMAIL, B.INDATE,
            (SELECT NAME FROM T_CATEGORY WHERE CTG_KEY = B.INTEREST_CTG_KEY_0) as affiliationName,
            B.GRADE, TO_CHAR(B.GRADE_DATE, 'YYYY-MM-DD') as GRADE_DATE, B.AUTHORITY
        FROM T_TEACHER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE B.AUTHORITY = 5
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND B.TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND B.TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND B.USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND B.INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND B.INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
        ORDER BY B.INDATE DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectTeacherListCount" resultType="Integer">
        SELECT COUNT (A.TEACHER_KEY)
        FROM T_TEACHER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        WHERE B.AUTHORITY = 5
        <if test="searchType == 'name'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'id'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'phone'">
            AND B.TELEPHONE = #{searchText}
        </if>
        <if test="searchType == 'mobile'">
            AND B.TELEPHONE_MOBILE = #{searchText}
        </if>
        <if test="searchType == 'code'">
            AND B.USER_KEY = #{searchText}
        </if>
        <if test="regStartDate != '' and regEndDate != ''">
            <![CDATA[
                AND B.INDATE >= TO_DATE(#{regStartDate}, 'YYYY-MM-DD')
            ]]>
            <![CDATA[
                AND B.INDATE < TO_DATE(#{regEndDate}, 'YYYY-MM-DD') + 1
            ]]>
        </if>
    </select>

    <select id="selectTTeacherInfo" resultType="com.zianedu.lms.vo.TTeacherVO">
        SELECT * FROM T_TEACHER WHERE USER_KEY = #{userKey}
    </select>

    <select id="selectTLinkKeyByTeacher" resultType="com.zianedu.lms.vo.TLinkKeyVO">
        SELECT A.LINK_KEY, A.REQ_KEY FROM T_LINK_KEY A
        INNER JOIN T_CATEGORY B
        ON A.REQ_KEY = B.CTG_KEY
        WHERE A.REQ_TYPE = 100
        AND A.RES_TYPE = 200
        AND A.RES_KEY = #{teacherKey}
    </select>

<!--    <select id="select">-->
<!--        &lt;!&ndash; req_key ==> 1086 : 계리직동영상 순서 // 1080 : 계리직학원 순서 // 829 : 기술직 동영상 순서 //
                                     823 : 기술직 학원 순서 // 794 : 행정직동영상 순서 // 788, 행정직학원 순서 -->
<!--        SELECT * FROM T_LINK_KEY where req_key = 1086-->
<!--    </select>-->

    <select id="selectNumberExposureTeacherList" resultType="com.zianedu.lms.vo.TLinkKeyVO">
        SELECT
            A.LINK_KEY, A.REQ_KEY, A.POS, C.NAME
        FROM T_LINK_KEY A
        INNER JOIN T_TEACHER B ON A.RES_KEY = B.TEACHER_KEY
        INNER JOIN T_USER C
        ON B.USER_KEY = C.USER_KEY
        WHERE A.REQ_KEY = #{reqKey}
        ORDER By POS ASC
    </select>


    <insert id="insertTUSer" parameterType="com.zianedu.lms.vo.TUserVO">
        <selectKey resultType="Integer" keyProperty="userKey" order="BEFORE">
            SELECT T_USER_SEQ.nextval FROM DUAL
        </selectKey>
        INSERT INTO T_USER
        (
            USER_KEY, C_KEY, USER_ID, INDATE, NAME, AUTHORITY, STATUS, PWD, BIRTH, LUNAR, GENDER, TELEPHONE,
            TELEPHONE_MOBILE, ZIPCODE, ADDRESS_ROAD, EMAIL, RECV_SMS, RECV_EMAIL,
            WELFARE_DC_PERCENT, GRADE, INTEREST_CTG_KEY_0, INTEREST_CTG_KEY_1, IS_MOBILE_REG,
            ADMIN_AUTHORITY_KEY, GRADE_G_KEY, GRADE_PRICE, NOTE
        )
        VALUES
        (
            #{userKey}, 100, #{userId}, #{indate}, #{name}, #{authority}, 10, #{pwd}, #{birth}, #{lunar}, #{gender}, #{telephone},
            #{telephoneMobile}, #{zipcode}, #{addressRoad}, #{email}, #{recvSms}, #{recvEmail},
            0, #{grade}, #{interestCtgKey0}, 0, #{isMobileReg},
            #{adminAuthorityKey}, 0, #{gradePrice}, #{note}
        )
    </insert>

    <insert id="insertTCounsel" parameterType="com.zianedu.lms.vo.TCounselVO">
        INSERT INTO T_COUNSEL
        (
            COUNSEL_KEY, C_KEY, USER_KEY, WRITE_USER_KEY, TYPE, STATUS, INDATE,
            PROC_START_DATE, PROC_END_DATE, TELEPHONE, TELEPHONE_MOBILE, MEMO, CONTENTS
        )
        VALUES
        (
            T_COUNSEL_SEQ.nextval, 100, #{userKey}, #{writeUserKey}, #{type}, #{status}, TO_DATE(#{indate}, 'YYYY-mm-dd hh:mi:ss'),
            TO_DATE(#{procStartDate}, 'YYYY-mm-dd hh:mi:ss'), TO_DATE(#{procEndDate}, 'YYYY-mm-dd hh:mi:ss'), #{telephone}, #{telephoneMobile}, #{memo}, #{contents}
        )
    </insert>

    <insert id="insertTTeacher" parameterType="Integer">
        INSERT INTO T_TEACHER
        ( TEACHER_KEY, USER_KEY )
        VALUES
        ( T_TEACHER_SEQ.nextval, #{userKey})
    </insert>

    <update id="updateTCounsel" parameterType="com.zianedu.lms.vo.TCounselVO">
        UPDATE T_COUNSEL
        <set>
            <if test="type != null">TYPE = #{type},</if>
            <if test="status != null">STATUS = #{status},</if>
            <if test="procStartDate != '' and procStartDate != ''">PROC_START_DATE = #{procStartDate},</if>
            <if test="procEndDate != '' and procEndDate != ''">PROC_END_DATE = #{procEndDate},</if>
            <if test="memo != '' and memo != ''">MEMO = #{memo},</if>
            <if test="contents != '' and contents != ''">CONTENTS = #{contents},</if>
        </set>
        WHERE COUNSEL_KEY = #{counselKey}
    </update>

    <update id="updateTLinkKeyPos">
        UPDATE T_LINK_KEY
        SET POS = #{pos}
        WHERE LINK_KEY = #{linkKey}
    </update>

</mapper>
