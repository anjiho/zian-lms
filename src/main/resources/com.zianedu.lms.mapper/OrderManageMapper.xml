<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zianedu.lms.mapper.OrderManageMapper">

    <select id="selectOrderList" resultType="OrderResultDTO">
        SELECT
            DISTINCT A.J_KEY, A.J_ID, B.NAME, B.USER_ID, A.PRICE_PAY,
                     A.PAY_TYPE, A.PAY_STATUS, A.IS_MOBILE, D.STATUS as DELIVER_STATUS,
                     A.INDATE, A.DEPOSIT_USER, A.CARD_CODE, A.IS_OFFLINE, B.USER_KEY
        FROM T_ORDER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        INNER JOIN T_ORDER_GOODS C
        ON A.J_KEY = C.J_KEY
        LEFT OUTER JOIN T_ORDER_DELIVERY D
        ON A.J_KEY = D.J_KEY
        WHERE 1=1
        <![CDATA[
            AND TO_CHAR(A.INDATE, 'YYYY-MM-DD')  > TO_DATE(#{startSearchDate}, 'YYYY-MM-DD')
         ]]>
        <![CDATA[
            AND TO_CHAR(A.INDATE, 'YYYY-MM-DD') <= TO_DATE(#{endSearchDate}, 'YYYY-MM-DD') + 1
        ]]>
        AND A.PAY_STATUS IN (0, 1, 2)
        <if test="goodsType != '' and goodsType != null">
            AND C.TYPE = #{goodsType}
            <if test="goodsType != 5">
                AND A.UNIQUE_TYPE_LIST NOT IN ('5,')
            </if>
            <if test="goodsType == 5">
                AND A.UNIQUE_TYPE_LIST LIKE '5,'||'%'
            </if>
        </if>
        <if test="isOffline != null and isOffline >= 0">
            AND A.IS_OFFLINE = #{isOffline}
        </if>
        <if test="payType != null and payType >= 0">
            AND A.PAY_TYPE = #{payType}
        </if>
        <if test="isMobile != null and isMobile >= 0">
            AND A.IS_MOBILE = #{isMobile}
        </if>
        <if test="searchType == 'orderUserId'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'orderUserName'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'orderId'">
            AND A.J_ID = #{searchText}
        </if>
        <if test="searchType == 'orderUserName'">
            AND C.G_NAME LIKE '%'||#{searchText}||'%'
        </if>
        <!-- 동영상 재수강 여부 -->
        <if test="isVideoReply == 0">
            AND C.EXTEND_DAY = -1
        </if>
        <if test="isVideoReply == 1">
            AND C.EXTEND_DAY > -1
        </if>
        ORDER BY A.J_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectGoodsNameAtLimitOne" resultType="OrderGoodsNameDTO">
        SELECT * FROM
        (
            SELECT G_NAME,
                    (
                        ( SELECT count(J_G_KEY) FROM T_ORDER_GOODS WHERE J_KEY = A.J_KEY ) - 1
                    ) as CNT
            FROM T_ORDER_GOODS A
            WHERE A.J_KEY = #{jKey}
            ORDER BY A.J_G_KEY ASC
        )
        WHERE ROWNUM = 1
    </select>

    <select id="selectOrderListCount" resultType="Integer">
        SELECT COUNT(J_KEY)
        FROM (
                SELECT DISTINCT A.J_KEY
                FROM T_ORDER A
                INNER JOIN T_USER B
                ON A.USER_KEY = B.USER_KEY
                INNER JOIN T_ORDER_GOODS C
                ON A.J_KEY = C.J_KEY
                LEFT OUTER JOIN T_ORDER_DELIVERY D
                ON A.J_KEY = D.J_KEY
                WHERE 1=1
                <![CDATA[
                    AND TO_CHAR(A.INDATE, 'YYYY-MM-DD')  > TO_DATE(#{startSearchDate}, 'YYYY-MM-DD')
                 ]]>
                <![CDATA[
                    AND TO_CHAR(A.INDATE, 'YYYY-MM-DD') <= TO_DATE(#{endSearchDate}, 'YYYY-MM-DD') + 1
                ]]>
                AND A.PAY_STATUS IN (0, 1, 2)
                <if test="goodsType != '' and goodsType != null">
                    AND C.TYPE = #{goodsType}
                    <if test="goodsType != 5">
                        AND A.UNIQUE_TYPE_LIST NOT IN ('5,')
                    </if>
                    <if test="goodsType == 5">
                        AND A.UNIQUE_TYPE_LIST LIKE '5,'||'%'
                    </if>
                </if>
                <if test="isOffline != null and isOffline >= 0">
                    AND A.IS_OFFLINE = #{isOffline}
                </if>
                <if test="payType != null and payType >= 0">
                    AND A.PAY_TYPE = #{payType}
                </if>
                <if test="isMobile != null and isMobile >= 0">
                    AND A.IS_MOBILE = #{isMobile}
                </if>
                <if test="searchType == 'orderUserId'">
                    AND B.USER_ID = #{searchText}
                </if>
                <if test="searchType == 'orderUserName'">
                    AND B.NAME LIKE '%'||#{searchText}||'%'
                </if>
                <if test="searchType == 'orderId'">
                    AND A.J_ID = #{searchText}
                </if>
                <if test="searchType == 'orderUserName'">
                    AND C.G_NAME LIKE '%'||#{searchText}||'%'
                </if>
                <!-- 동영상 재수강 여부 -->
                <if test="isVideoReply == 0">
                    AND C.EXTEND_DAY = -1
                </if>
                <if test="isVideoReply == 1">
                    AND C.EXTEND_DAY > -1
                </if>
        )
    </select>

    <select id="selectCancelOrderList" resultType="OrderResultDTO">
        SELECT
            DISTINCT A.J_KEY, A.J_ID, B.NAME, B.USER_ID, A.PRICE_PAY,
            A.PAY_TYPE, A.PAY_STATUS, A.IS_MOBILE, D.STATUS as DELIVER_STATUS,
            A.INDATE, A.DEPOSIT_USER, A.CARD_CODE, A.CANCEL_DATE, A.IS_OFFLINE, B.USER_KEY
        FROM T_ORDER A
        INNER JOIN T_USER B
        ON A.USER_KEY = B.USER_KEY
        INNER JOIN T_ORDER_GOODS C
        ON A.J_KEY = C.J_KEY
        LEFT OUTER JOIN T_ORDER_DELIVERY D
        ON A.J_KEY = D.J_KEY
        WHERE 1=1
        <![CDATA[
            AND TO_CHAR(A.INDATE, 'YYYY-MM-DD')  > TO_DATE(#{startSearchDate}, 'YYYY-MM-DD')
         ]]>
        <![CDATA[
            AND TO_CHAR(A.INDATE, 'YYYY-MM-DD') <= TO_DATE(#{endSearchDate}, 'YYYY-MM-DD') + 1
        ]]>
        <![CDATA[
            AND TO_CHAR(A.CANCEL_DATE, 'YYYY-MM-DD')  > TO_DATE(#{startCancelSearchDate}, 'YYYY-MM-DD')
         ]]>
        <![CDATA[
            AND TO_CHAR(A.CANCEL_DATE, 'YYYY-MM-DD') <= TO_DATE(#{endCancelSearchDate}, 'YYYY-MM-DD') + 1
        ]]>
        AND A.PAY_STATUS IN (8, 9, 10)
        <if test="isOffline != null and isOffline >= 0">
            AND A.IS_OFFLINE = #{isOffline}
        </if>
        <if test="payType != null and payType >= 0">
            AND A.PAY_TYPE = #{payType}
        </if>
        <if test="isMobile != null and isMobile >= 0">
            AND A.IS_MOBILE = #{isMobile}
        </if>
        <if test="searchType == 'orderUserId'">
            AND B.USER_ID = #{searchText}
        </if>
        <if test="searchType == 'orderUserName'">
            AND B.NAME LIKE '%'||#{searchText}||'%'
        </if>
        <if test="searchType == 'orderId'">
            AND A.J_ID = #{searchText}
        </if>
        <if test="searchType == 'orderUserName'">
            AND C.G_NAME LIKE '%'||#{searchText}||'%'
        </if>
        ORDER BY A.J_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectCancelOrderListCount" resultType="Integer">
        SELECT COUNT(J_KEY)
        FROM (
            SELECT DISTINCT A.J_KEY
            FROM T_ORDER A
            INNER JOIN T_USER B
            ON A.USER_KEY = B.USER_KEY
            INNER JOIN T_ORDER_GOODS C
            ON A.J_KEY = C.J_KEY
            LEFT OUTER JOIN T_ORDER_DELIVERY D
            ON A.J_KEY = D.J_KEY
            WHERE 1=1
            <![CDATA[
                AND TO_CHAR(A.INDATE, 'YYYY-MM-DD')  > TO_DATE(#{startSearchDate}, 'YYYY-MM-DD')
             ]]>
            <![CDATA[
                AND TO_CHAR(A.INDATE, 'YYYY-MM-DD') <= TO_DATE(#{endSearchDate}, 'YYYY-MM-DD') + 1
            ]]>
            <![CDATA[
                AND TO_CHAR(A.CANCEL_DATE, 'YYYY-MM-DD')  > TO_DATE(#{startCancelSearchDate}, 'YYYY-MM-DD')
             ]]>
            <![CDATA[
                AND TO_CHAR(A.CANCEL_DATE, 'YYYY-MM-DD') <= TO_DATE(#{endCancelSearchDate}, 'YYYY-MM-DD') + 1
            ]]>
            AND A.PAY_STATUS IN (8, 9, 10)
            <if test="isOffline != null and isOffline >= 0">
                AND A.IS_OFFLINE = #{isOffline}
            </if>
            <if test="payType != null and payType >= 0">
                AND A.PAY_TYPE = #{payType}
            </if>
            <if test="isMobile != null and isMobile >= 0">
                AND A.IS_MOBILE = #{isMobile}
            </if>
            <if test="searchType == 'orderUserId'">
                AND B.USER_ID = #{searchText}
            </if>
            <if test="searchType == 'orderUserName'">
                AND B.NAME LIKE '%'||#{searchText}||'%'
            </if>
            <if test="searchType == 'orderId'">
                AND A.J_ID = #{searchText}
            </if>
            <if test="searchType == 'orderUserName'">
                AND C.G_NAME LIKE '%'||#{searchText}||'%'
            </if>
        )
    </select>

    <select id="selectOrderLectureVideoList" resultType="OrderLectureListDTO">
        SELECT A.J_LEC_KEY, C.J_KEY, C.USER_KEY, E.NAME, B.KIND, D.NAME as GOODS_NAME, A.STATUS, A.START_DT, (A.START_DT + A.LIMIT_DAY) as END_DT, A.LIMIT_DAY, A.PAUSE_CNT, A.PAUSE_START_DT, A.PAUSE_TOTAL_DAY, A.PAUSE_DAY, C.PAY_STATUS
        FROM T_ORDER_LEC A
        INNER JOIN T_ORDER_GOODS B
        on A.J_G_KEY = B.J_G_KEY
        INNER JOIN T_ORDER C
        on B.J_KEY = C.J_KEY
        INNER JOIN T_GOODS D
        on B.G_KEY = D.G_KEY
        INNER JOIN T_USER E
        on C.USER_KEY = E.USER_KEY
        WHERE 1=1
        <![CDATA[
                AND TO_CHAR(A.INDATE, 'YYYY-MM-DD')  > TO_DATE(#{startSearchDate}, 'YYYY-MM-DD')
             ]]>
        <![CDATA[
                AND TO_CHAR(A.INDATE, 'YYYY-MM-DD') <= TO_DATE(#{endSearchDate}, 'YYYY-MM-DD') + 1
            ]]>
        <if test="payStatus != null and payStatus != ''">
            <!-- 결제상태 : 결제완료 -->
            <if test="payStatus == '1'">
                AND C.PAY_STATUS IN (0, 1, 2)
            </if>
            <!-- 결제상태 : 결제취소 -->
            <if test="payStatus == '2'">
                AND C.PAY_STATUS IN (8, 9, 10)
            </if>
        </if>
        <if test="orderLecStatus != null and orderLecStatus != ''">
            <!-- 진행상태 : 대기중 + 시작 -->
            <if test="lecStatus == '1'">
                AND A.STATUS IN (0, 1)
            </if>
            <!-- 진행상태 : 일시정지 -->
            <if test="orderLecStatus == '2'">
                AND A.STATUS = 2
            </if>
            <!-- 진행상태 : 종강 -->
            <if test="orderLecStatus == '3'">
                AND A.STATUS = 3
            </if>
            <!-- 진행상태 : 재시작대기 -->
            <if test="orderLecStatus == '3'">
                AND A.STATUS = 4
            </if>
        </if>
        ORDER BY A.J_LEC_KEY DESC
        OFFSET #{startNumber} ROWS FETCH NEXT #{listLimitNumber} ROWS ONLY
    </select>

    <select id="selectOrderLectureVideoListCount" resultType="Integer">

    </select>

    <select id="selectTOrderInfoAtLectureTime" resultType="LectureTimeInfoDTO">
        SELECT A.J_LEC_KEY, C.j_id, C.USER_KEY, E.NAME, D.NAME as GOODS_NAME
        FROM T_ORDER_LEC A
        INNER JOIN T_ORDER_GOODS B
        ON A.J_G_KEY = B.J_G_KEY
        LEFT JOIN T_ORDER C
        ON B.J_KEY = C.J_KEY
        LEFT JOIN T_GOODS D
        ON B.G_KEY = D.G_KEY
        LEFT JOIN T_USER E
        ON C.USER_KEY = E.USER_KEY
        WHERE A.J_LEC_KEY = #{jLecKey}
    </select>

    <!-- 수강내역목록 > 수강시간 조정 > 강의제목 리스트 -->
    <select id="selectLectureTimeList" resultType="LectureTimeDTO">
        SELECT A.CURRI_KEY, A.NAME, A.VOD_TIME
        FROM T_LEC_CURRI A
        WHERE A.LEC_KEY = (
            SELECT C.LEC_KEY
            FROM T_ORDER_LEC A
            INNER JOIN T_ORDER_GOODS B
            ON A.J_G_KEY = B.J_G_KEY
            INNER JOIN T_LEC C
            ON B.G_KEY = C.G_KEY
            WHERE A.J_LEC_KEY = #{jLecKey}
        )
        ORDER BY A.CURRI_KEY ASC
    </select>

    <select id="selectLectureTimeByCurriKey" resultType="Integer">
        SELECT TIME
        FROM T_ORDER_LEC_CURRI
        WHERE J_LEC_KEY = #{jLecKey}
        AND CURRI_KEY = #{curriKey}
    </select>

</mapper>
